swagger: '2.0'
info:
  title: Plex Requests API
  description: Plex Requests API
  version: '1.0.0'
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /media:
    get:
      operationId: media
      description: Retrieve all requested media from database
      responses:
        200:
          description: data for a specific user
          schema:
            $ref: '#/definitions/Media'
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ApiError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      operationId: media
      description: Delete all media stored in DB
      responses:
        200:
          description: Confirmation message on database being cleared
          schema:
            type: string
            example: All media on the database has been removed
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ApiError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /movie/{movie-name}:
    x-swagger-router-controller: movies
    post:
      operationId: movies
      description: Add a movie title to database
      parameters:
        - name: movie-name
          in: path
          description: The name of the movie to add
          required: true
          type: string
          minimum: 1
      responses:
        200:
          description: Confirmation message
          schema:
            type: string
            example: the movie that has been requested {movie-name}
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ApiError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /tv/{show-name}:
    x-swagger-router-controller: tv
    post:
      operationId: tv
      description: Add a show title to database
      parameters:
        - name: show-name
          in: path
          description: The name of the show to add
          required: true
          type: string
          minimum: 1
      responses:
        200:
          description: Confirmation message
          schema:
            type: string
            example: the show that has been requested {show-name}
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ApiError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApiError'
  /tv/{show-name}/season/{season-number}:
    x-swagger-router-controller: seasons
    post:
      operationId: seasons
      description: Add a specific season for a show to database
      parameters:
        - name: show-name
          in: path
          description: The name of the show to add
          required: true
          type: string
          minimum: 1
        - name: season-number
          in: path
          description: The season number and show name to add
          required: true
          type: string
          minimum: 1
      responses:
        200:
          description: Confirmation message
          schema:
            type: string
            example: the show that has been requested {show-name} ({season-number})
        400:
          description: Bad Request.
          schema:
            $ref: '#/definitions/ApiError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ApiError'


  /swagger:
    x-swagger-pipe: swagger_raw
definitions:

  Movies:
    type: object
    properties:
      movies:
        type: object
        properties:
          uniqueId:
            type: string
            example: the-simpsons-movie

  TV:
    type: object
    properties:
      tv:
        type: object
        properties:
          uniqueId:
            type: string
            example: the-simpsons

  Seasons:
    type: object
    properties:
      seasons:
        type: object
        properties:
          season:
            type: string
            example: season-3
          show:
            type: string
            example: family-guy

  Media:
    type: object
    properties:
      movies:
        type: object
        properties:
          uniqueId:
            type: string
            example: the-simpsons-movie
      tv:
        type: object
        properties:
          uniqueId:
            type: string
            example: the-simpsons
      seasons:
        type: object
        properties:
          season:
            type: string
            example: season-3
          show:
            type: string
            example: family-guy

  ApiError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
